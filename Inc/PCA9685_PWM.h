#ifndef PCA9685_DRV_H
#define PCA9685_DRV_H

#include <stdint.h>
 
#include <stm32f1xx_hal.h>
#include <stm32f1xx_hal_i2c.h>

typedef enum PCA9685_REG_CTRL
{
    PCA9685_REG_MODE1      = 0x00, // Mode register 1
    PCA9685_REG_MODE2      = 0x01, // Mode register 2
    PCA9685_REG_PRE_SCALE  = 0xFE, // Settings pres
    PCA9685_REG_TEST_MODE  = 0xFF, //
} PCA9685_REG_CTRL;

enum PCA9685_MODE1_MASK
{
    PCA9685_MODE1_RESTART = 1 << 7, // Reset PWM
    PCA9685_MODE1_EXTCLK  = 1 << 6, // Use extern clock
    PCA9685_MODE1_AI      = 1 << 5, // Auto-increment mode
    PCA9685_MODE1_SLEEP   = 1 << 4, // Turn on SLEEP MODE
    PCA9685_MODE1_SUB1    = 1 << 3, // Allow answering at add-on address 1
    PCA9685_MODE1_SUB2    = 1 << 2, // Allow answering at add-on address 2
    PCA9685_MODE1_SUB3    = 1 << 1, // Allow answering at add-on address 3
    PCA9685_MODE1_ALLCALL = 1 << 0, // Allorw answering at add-on address 4
};
 
/**
 * ??????? MODE2 ???????? ?? ????????? ?????? ???????
 *
 * ???? 7-5 ???????????????
 **/
enum PCA9685_MODE2_MASK
{
    PCA9685_MODE2_INVRT  = 1 << 4,       // ???????????? ??????
    PCA9685_MODE2_OCH    = 1 << 3,       //
    PCA9685_MODE2_OUTDRV = 1 << 2,       //
    PCA9685_MODE2_OUTNE  = (1 << 1) | 1, //
};
 
// ???????? ??? ??????? ?????????????? ??????? I2C
enum PCA9685_REG_ADR
{
    PCA9685_REG_SUBADR1    = 0x02, //
    PCA9685_REG_SUBADR2    = 0x03, //
    PCA9685_REG_SUBADR3    = 0x04, //
    PCA9685_REG_ALLCALLADR = 0x05, // ????? ??? ???? PCA9685, ???????????? ? ????
};
 
/**
 * ?????????? ????? ?????? ?? 16 PWM, ?????????? ?????? [0x06 .. 0x45]
 *
 * ??? ????????? ??????? PWM ???? ?? ??? 12-?????? ????????:
 * ON  - ????? ?????????
 * OFF - ????? ??????????
 * ????? ????????????? ?? ?????? ?????
 **/
typedef struct PCA9685_PWM
{
    uint16_t on;
    uint16_t off;
} PCA9685_PWM;
 
/**
 * ????? ??? ??????????? PWM ????? ?????????? ?? ???????:
 * uint16_t pwm_addr = PWM_REG_BASE + PWM_REG_SIZE * PWM_NO;
 * ??? PWM_NO - ?????? ? ???????(????????? ? ????)
 *
 * ?????? ????????? ????? ??? ???? PWM ????? ????? ??????? PWM_ALL
 * */
enum PCA9685_REG_PWM
{
    PWM_REG_BASE = 0x06, // ????????? ???????(????? PWM#0)
    PWM_ALL_BASE = 0xFA, // ??????? ?????? ??????????(?????? ??? ??????)
    PWM_REG_SIZE = 0x04, // ?????? ?????? ????????
 
    // ???????? ????????????
    PWM_ON_L  = 0x00, PWM_ON_H  = 0x01,
    PWM_OFF_L = 0x02, PWM_OFF_H = 0x03,
};
 
typedef struct PCA9685_DRV
{
    I2C_HandleTypeDef hi2c2;
    uint16_t address;
} PCA9685_DRV;
 
enum
{
    PCA9685_ADDR_DEFAULT = 0x70,
};
 
HAL_StatusTypeDef pca_init(PCA9685_DRV* self, I2C_HandleTypeDef* bus, uint16_t dev_addr);
 
HAL_StatusTypeDef pca_read_block(PCA9685_DRV* self, uint16_t start, uint16_t count, uint8_t* buff, uint32_t timeout);
HAL_StatusTypeDef pca_write_block(PCA9685_DRV* self, uint16_t start, uint16_t count, uint8_t * buff, uint32_t timeout);
 
HAL_StatusTypeDef pca_get_reg(PCA9685_DRV* self, uint16_t reg_no, uint8_t* value);
HAL_StatusTypeDef pca_set_reg(PCA9685_DRV* self, uint16_t reg_no, uint8_t  value);
 
HAL_StatusTypeDef pca_set_pwm(PCA9685_DRV* self, uint8_t pwm_no, uint16_t pwm_on, uint16_t pwm_off);
 

#endif

